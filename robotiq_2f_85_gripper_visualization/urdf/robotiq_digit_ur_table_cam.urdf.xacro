<!--
    adjusted from the official sr package
 Software License Agreement (BSD License)
 Copyright Â© 2022-2023 belongs to Shadow Robot Company Ltd.
 All rights reserved.
 Redistribution and use in source and binary forms, with or without modification,
 are permitted provided that the following conditions are met:
   1. Redistributions of source code must retain the above copyright notice,
      this list of conditions and the following disclaimer.
   2. Redistributions in binary form must reproduce the above copyright notice,
      this list of conditions and the following disclaimer in the documentation
      and/or other materials provided with the distribution.
   3. Neither the name of Shadow Robot Company Ltd nor the names of its contributors
      may be used to endorse or promote products derived from this software without
      specific prior written permission.
 This software is provided by Shadow Robot Company Ltd "as is" and any express
 or implied warranties, including, but not limited to, the implied warranties of
 merchantability and fitness for a particular purpose are disclaimed. In no event
 shall the copyright holder be liable for any direct, indirect, incidental, special,
 exemplary, or consequential damages (including, but not limited to, procurement of
 substitute goods or services; loss of use, data, or profits; or business interruption)
 however caused and on any theory of liability, whether in contract, strict liability,
 or tort (including negligence or otherwise) arising in any way out of the use of this
 software, even if advised of the possibility of such damage.
-->

<robot xmlns:xacro="http://www.ros.org/wiki/xacro"
       xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface" name="urrobotiq">

    <link name="world"/>
    <xacro:arg name="initial_y" default="0.0"/>
    <xacro:arg name="initial_z" default="0.0"/>
    <xacro:arg name="initial_yaw" default="0.0"/>
    <xacro:arg name="transmission_hw_interface" default="hardware_interface/PositionJointInterface"/>
    <xacro:arg name="arm_prefix" default="ra" />
    <xacro:arg name="hand_prefix" default="" />
    <xacro:arg name="robot_model" default="ur5e"/>
    <xacro:arg name="kinematics_config" default="$(find ur_description)/config/$(arg robot_model)/default_kinematics.yaml"/>
    <xacro:include filename="$(find ur_description)/urdf/inc/$(arg robot_model)_macro.xacro"/>
    <xacro:include filename="$(find robotiq_2f_85_gripper_visualization)/urdf/table_macro.xacro"/>
    <xacro:include filename="$(find robotiq_ft_sensor)/urdf/robotiq_ft300.urdf.xacro" />
    <xacro:include filename="$(find robotiq_2f_85_gripper_visualization)/urdf/robotiq_arg2f_85_digit_model_macro.xacro" />


    <xacro:if value="${'$(arg robot_model)' == 'ur10e'}">
        <xacro:ur10e_robot prefix="$(arg arm_prefix)_" transmission_hw_interface="$(arg transmission_hw_interface)" kinematics_parameters_file="$(arg kinematics_config)"/>
    </xacro:if>
    <xacro:if value="${'$(arg robot_model)' == 'ur10'}">
        <xacro:ur10_robot prefix="$(arg arm_prefix)_" transmission_hw_interface="$(arg transmission_hw_interface)" kinematics_parameters_file="$(arg kinematics_config)"/>
    </xacro:if>
    <xacro:if value="${'$(arg robot_model)' == 'ur5e'}">
        <xacro:ur5e_robot prefix="$(arg arm_prefix)_" transmission_hw_interface="$(arg transmission_hw_interface)" kinematics_parameters_file="$(arg kinematics_config)"/>
    </xacro:if>
    <xacro:if value="${'$(arg robot_model)' == 'ur5'}">
        <xacro:ur5_robot prefix="$(arg arm_prefix)_" transmission_hw_interface="$(arg transmission_hw_interface)" kinematics_parameters_file="$(arg kinematics_config)"/>
    </xacro:if>

    <xacro:table_macro/>

    <joint name="world_to_table" type="fixed">
        <parent link="world"/>
        <child link="table"/>
            <origin xyz="0.0 $(arg initial_y) $(arg initial_z)" rpy="0.0 0.0 $(arg initial_yaw)"/>
    </joint>

    <joint name="table_to_robot" type="fixed">
        <parent link="table"/>
        <child link="$(arg arm_prefix)_base_link"/>
        <origin xyz="-0.5 0 0.63" rpy="0 0 0"/>
    </joint>
    
    
    <xacro:robotiq_ft300 parent="$(arg arm_prefix)_flange" prefix="">
      <origin xyz="-0.005 0.0 0.0" rpy="${pi/2.0} ${pi/2.0} ${pi/2.0}"/>
    </xacro:robotiq_ft300>




    <!-- Camera -->
    <!-- Create the Robotiq wrist camera --> 
    
    <xacro:include filename="$(find robotiq_2f_85_gripper_visualization)/urdf/robotiq_arg2f_85_ur5e_wrist_cam.xacro" />
    <xacro:robotiq_wrist_camera parent="$(arg hand_prefix)robotiq_arg2f_base_link" prefix="$(arg hand_prefix)">
    </xacro:robotiq_wrist_camera>

    <!-- Create the Robotiq 2F-85 gripper --> 

    <xacro:robotiq_arg2f_85 prefix="$(arg hand_prefix)"/>

    <joint name="$(arg arm_prefix)_arm_to_hand" type="fixed">
        <parent link="ft300_sensor"/>
        <child link="$(arg hand_prefix)robotiq_arg2f_base_link"/>
        <origin xyz="0.0 0.0 0.0" rpy="0 ${pi} 0"/>
    </joint>



    <gazebo reference="ra_wrist_3_joint">
        <provideFeedback>true</provideFeedback>
    </gazebo>

    <!-- The ft_sensor plugin -->  
    <gazebo>
        <plugin name="ft_sensor" filename="libgazebo_ros_ft_sensor.so">
            <updateRate>100.0</updateRate>
            <topicName>ft_sensor_topic</topicName>
            <jointName>ra_wrist_3_joint</jointName>
        </plugin>
    </gazebo>

    <gazebo>
        <plugin name="gazebo_ros_control_gripper" filename="libgazebo_ros_control.so">
        </plugin>
    </gazebo>
    


</robot>
